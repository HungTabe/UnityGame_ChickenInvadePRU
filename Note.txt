1) Import tài nguyên đã thiết kế
2) Vào Folder background rồi - kéo img vào vùng camera
2) Kéo dãn img ra - vào tab game rồi chỉnh free aspect thành FullHD 
3) Kéo phi thuyền ship vào Scene tab - và kéo protected vào Scence tab
4) Chọn protected tại sprite để hiện inspect của no chỉnh phần inspect - SpriteMode - 
pixelsPerUnit thành 600 để khớp với ship - apply
5) Kéo gameObj protected vào gameObj ship rồi chỉnh thông số xyz của protected về 000 để ship
ở giữa - gọi mới là Shield
6) Dùng animation để xoay gameObj Shield quanh ship
7) Tại Asset tạo folder Animation rồi tạo Folder Shield cho ship
8) Chọn gameObj Shield rồi STRL 6 để mở AnimationTab
9) Tạo bằng nút create - rồi chọn add prop - chọn transform - chọn rotate - đưa tỏ tới 0.15
rồi set z về -97 - add key frame rồi xóa key cuối đi
10) Vào compo Shield rồi chọn Animator rồi bật Apply root motion lên là ok


================================================================================

11) Vào Background - đặt order in layer thành -10
12) Tạo folder sccipt ỏ asset vào script để tạo ship script
13) Script theo kiểu monoBehave nhé và kéo vào compo và dup click để vào IDE
14) Exlain in script and then update speed to 10 to move ship

================================================================================

Fix logic ship move out of boundary

Vector3 TopLeftPoint = Camera.main.ScreenToWorldPoint(new Vector3(Screen.width, Screen.height, 0));
Screen.width và Screen.height là kích thước màn hình tính bằng pixel.
Camera.main.ScreenToWorldPoint(...) chuyển đổi tọa độ từ màn hình (Screen Space) sang thế giới (World Space).
Điểm (Screen.width, Screen.height, 0) đại diện cho góc trên bên phải của màn hình.
TopLeftPoint có tọa độ thực trong không gian 3D Unity.
TopLeftPoint.x là giới hạn bên phải của màn hình trong hệ tọa độ thế giới.
TopLeftPoint.y là giới hạn trên của màn hình trong hệ tọa độ thế giới.
Vì trục x và y có đối xứng qua (0,0), giới hạn bên trái là -TopLeftPoint.x, giới hạn dưới là -TopLeftPoint.y.

Giới hạn vị trí của tàu trong phạm vi màn hình
 Vector3 TopLeftPoint = Camera.main.ScreenToWorldPoint(new Vector3(Screen.width, Screen.height,0));
        transform.position = new Vector3(
            Mathf.Clamp(transform.position.x,TopLeftPoint.x*-1,TopLeftPoint.x),
            Mathf.Clamp(transform.position.y,TopLeftPoint.y*-1,TopLeftPoint.y));

Mathf.Clamp(value, min, max):

Nếu value nhỏ hơn min, gán value = min
Nếu value lớn hơn max, gán value = max
Nếu value nằm trong phạm vi [min, max], giữ nguyên.

Tóm tắt
🔹 Chuyển đổi tọa độ từ màn hình sang thế giới để biết giới hạn của màn hình trong hệ tọa độ 3D.
🔹 Giữ tàu trong màn hình bằng cách giới hạn x và y trong phạm vi của TopLeftPoint.
🔹 Sử dụng Mathf.Clamp() để đảm bảo tàu không ra ngoài vùng chơi.

===============================

Tao prefab các viên đạn

Kéo từng hình ảnh sprites bullet lên tab inspect

Có thẻ tắt khung trắng cam bằng nút quả cầu 3 dấu chấm
rồi kéo thả chọn cả cụm

Trục positoin x ghi L(0,4) để phân ra

Bôi đen chọn hết rồi thêm BoxCollider2D hitbox cho viên đạn

Kéo hết vào folder PreFabs để tạo prefab

Time.deltaTime:
Đây là thời gian giữa hai frame liên tiếp, giúp di chuyển mượt mà ở các tốc độ khung hình 
khác nhau.
Nếu không dùng Time.deltaTime, tốc độ viên đạn sẽ phụ thuộc vào FPS (khung hình/giây), 
gây ra lỗi chạy nhanh hoặc chậm không đều.

Tất cả bullet prefabs đặt overrides applyAll nhé

Thiết lập tất cả

==========================================================

Vô ship script để tạo logic bắn

Tạo 2 hàm move và fire : move di chuyển fire thì bắn đạn bằng khởi tạo prefabs
Kê cái list đạn và tier đạn

Hàm update : Move() ; Fire()

Kéo list prefabs đạn và bullet list của ship script

===========
Viên đạn bắn ra phải biến mất để tránh nặng game - logic xử lý đạn
Idea : Tạo biến khoảng cách để nếu đạn bay quá khoảng cách thì xóa đạn


==== Tiếp tục ci-6

Chú gà từ sprite to tách ra cho nó nhỏ rồi kéo mảnh nhỏ vào hierachy để tạo game obj
sau đó add component BoxCollider2D và Rigidbody2D vào
Animation bay thì CTRL 6 và game object - create - kéo sprite chuỗi vào và thêm sữa xóa
các key frame để có animation cho game obj

BoxCollider 2D bật cái nút EditColider để chịnh khung va chạm

Rigid 2D cho gravity scale là 0 để gà nó bay

Đặt đạn trigger có thể xuyên vật

Vào prefab bullet bôi đen hết rồi tại compo box collider tick cái isTrigger lên

------------------

Lập trình gà đẻ trứng

Tạo chickenscript

Có sử dụng coroutine
Coroutine trong Unity là gì?
Coroutine (hợp tác luồng) là một phương thức đặc biệt trong Unity giúp bạn thực hiện 
các tác vụ bất đồng bộ mà không chặn toàn bộ chương trình.

Nó cho phép tạm dừng thực thi tại một số điểm nhất định và tiếp tục chạy ở khung hình 
tiếp theo hoặc sau một khoảng thời gian cụ thể.

Tại sao cần Coroutine?
Thông thường, khi bạn chạy một vòng lặp hoặc chờ trong một hàm Update(), Unity sẽ bị 
chặn và game có thể bị đơ (freeze). Coroutine giúp chạy nền các tác vụ mà không ảnh hưởng 
đến hiệu suất game.Nhưng với Coroutine, game vẫn tiếp tục chạy mà không bị chặn

SpawnEgg()

IEnumerator, cho phép Unity tạm dừng thực thi tại một số điểm mà không cần chặn 
toàn bộ chương trình.

3. Instantiate(EggPrefabs, transform.position, Quaternion.identity);
Instantiate: Tạo ra một bản sao của EggPrefabs tại vị trí hiện tại (transform.position).
Quaternion.identity: Giữ nguyên hướng quay của trứng (không xoay).

4. yield return new WaitForSeconds(Random.Range(2, 7));
WaitForSeconds(n): Tạm dừng coroutine trong n giây.
Random.Range(2, 7): Chọn ngẫu nhiên một số từ 2 đến 6 giây 
(vì giá trị tối đa của Random.Range dạng int sẽ không bao gồm 7).

Đưa script vào con gà 

Keo hinh anh egg và screen de tao game obj trung
add component rigid 2d de co trong luc roi

Tao prefab cho chicken and egg roi sau do keo egg prefab vao chicken script roi
apply all de ap dung cho chick ken prefab









